import math as m
import numpy as np

C = [0.8797, 0.3884, 0.6289, 0.8750, 0.5959, 0.8589, 0.9996, 0.2415, 0.3808, 0.9606, 
   0.9848, 0.3469, 0.7977, 0.5844, 0.8147, 0.6431, 0.7387, 0.5613, 0.0318, 0.7401,
   0.4557, 0.1592, 0.8536, 0.8846, 0.3410, 0.1492, 0.8681, 0.5291, 0.3188, 0.5992,
   0.9170, 0.2204, 0.5991, 0.5461, 0.5739, 0.3254, 0.0856, 0.2258, 0.4603, 0.5027,
   0.8376, 0.6235, 0.3681, 0.2088, 0.1525, 0.2006, 0.4720, 0.4272, 0.6360, 0.0954]

A= [0.78, 0.98, 0.24, 0.73, 0.43, 0.16, 0.78, 0.47, 0.18, 0.55,
   0.04, 0.29, 0.68, 0.77, 0.16, 0.03, 0.79, 0.22, 0.37, 0.80,
   0.96, 0.26, 0.91, 0.55, 0.75, 0.55, 0.64, 0.39, 0.53, 0.45,
   0.61, 0.14, 0.38, 0.12, 0.40, 0.74, 0.78, 0.98, 0.27, 0.60,
   0.43, 0.67, 0.62, 0.32, 0.53, 0.54, 0.24, 0.29, 0.18, 0.08,
   0.82, 0.94, 0.19, 0.98, 0.41, 1.00, 0.74, 0.92, 0.14, 0.43,
   0.83, 0.88, 0.18, 0.21, 0.50, 0.13, 0.43, 0.69, 0.08, 0.12,
   0.22, 0.50, 0.16, 0.11, 0.18, 0.89, 0.80, 0.42, 0.29, 0.87,
   0.83, 0.79, 0.65, 0.28, 0.78, 0.49, 0.36, 0.86, 0.87, 0.64,
   0.51, 0.07, 0.18, 0.94, 0.50, 0.22, 0.66, 0.91, 0.48, 0.24]

def Import(C):
    #alpha
    alpha = 0.05 #suponiendo que se tiene un nivel de aceptacion del 95 %
    n=len(C) #elementos de r_i

    m_o= m.sqrt(n)
    k= int(m_o)+1 #numero de particiones
    t = (1-0)/k #ancho de clase

    #Intervalos
    AA = []
    AA_2 = []
    #Frecuencia Observada
    sum = 0 
    SS =[] 

    RR=[] #Frecuencia Esperada

    #Prueba Chi- Cuadrada
    TT=[]
    #impresion tabla
    kim=0

    for i in range(0,k):
        AA.append(i*t)
        AA_2.append(t+AA[i])
        #frecuencia Observada
        for j in C:
            if i!=(k-1):
                if j>= AA[i] and j<AA_2[i]:
                    sum+=1
                else:
                    pass 
            else:
                if j>= AA[i] and j<=AA_2[i]:
                    sum+=1
                else:
                    pass 
        SS.append(sum)
        sum=0
        #Frecuencia esperada
        RR.append(n/k)
        #Prueba Chi- Cuadrada
        TT.append( ((RR[i]-SS[i])**2)/RR[i] )
        #IMPRESION DE TABLA
        print('\n',AA[i], '\t  |', AA_2[i], '\t  |', SS[i], '\t  |', RR[i], '\t  |', TT[i])
        kim+=TT[i]

    print('\n El valor estadÃ­stico es: ',kim)
Import(C)



print(np.mean(C))
print(np.var(C))
